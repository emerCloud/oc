<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reva on ownCloud</title>
    <link>https://owncloud.github.io/extensions/storage/</link>
    <description>Recent content in Reva on ownCloud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 02 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://owncloud.github.io/extensions/storage/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Configuration</title>
      <link>https://owncloud.github.io/extensions/storage/configuration/</link>
      <pubDate>Wed, 18 Nov 2020 12:06:54 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/storage/configuration/</guid>
      <description>Configuration  Configuration using config files Envrionment variables Commandline flags   Root Command Sub Commands  storage storage-public-link storage storage-home storage storage-metadata storage sharing storage auth-bearer storage auth-basic storage frontend storage users storage gateway storage storage-users storage health storage storage   Config for the different Storage Drivers  Local Driver Eos Driver owCloud Driver Ocis Driver       Configuration oCIS Single Binary is not responsible for configuring extensions.</description>
    </item>
    
    <item>
      <title>Building</title>
      <link>https://owncloud.github.io/extensions/storage/building/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/storage/building/</guid>
      <description>As this project is built with Go, so you need to install that first. The installation of Go is out of the scope of this document, please follow the official documentation for Go.To build this project you have to install Go &amp;gt;= v1.13. After the installation of the required tools you need to get the sources:
git clone https://github.com/owncloud/ocis.git cd ocis/storage All required tool besides Go itself and make are bundled or getting automatically installed within the GOPATH.</description>
    </item>
    
    <item>
      <title>Users</title>
      <link>https://owncloud.github.io/extensions/storage/users/</link>
      <pubDate>Thu, 16 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/storage/users/</guid>
      <description>Demo driver This is a simple user driver for testing. It contains three users:
einstein:relativity marie:radioactivty richard:superfluidity In order to use the demo driver you need to export the relevant environment variable:
export STORAGE_USERS_DRIVER=demo JSON driver In order to switch from the ldap driver to JSON based users you need to export the relevant environment variables:
export STORAGE_USERS_DRIVER=json export STORAGE_USERS_JSON=/path/to/users.json For the format of the users.json have a look at the reva examples</description>
    </item>
    
    <item>
      <title>Storages</title>
      <link>https://owncloud.github.io/extensions/storage/storages/</link>
      <pubDate>Mon, 27 Apr 2020 18:46:00 +0100</pubDate>
      
      <guid>https://owncloud.github.io/extensions/storage/storages/</guid>
      <description>Storage commands storage has multiple storage provider commands to preconfigure different default configurations for the reva storage provider service. While you could rerun storage storage-oc multiple times with different flags to get multiple instances we are giving the different commands the necessary default configuration to allow the ocis binary to simply start them and not deal with configuration.
Storage providers To manage the file tree ocis uses storage storage providers that are accessing the underlying storage using a storage driver.</description>
    </item>
    
    <item>
      <title>License</title>
      <link>https://owncloud.github.io/extensions/storage/license/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/storage/license/</guid>
      <description>This project is licensed under the Apache 2.0 license. For the license of the used libraries you have to check the respective sources.</description>
    </item>
    
    <item>
      <title>Updating reva</title>
      <link>https://owncloud.github.io/extensions/storage/updating/</link>
      <pubDate>Fri, 22 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/storage/updating/</guid>
      <description>    Updating reva     Updating reva  Run go get github.com/cs3org/reva@master Create a changelog entry containing changes that were done in reva Create a Pull Request to ocis-reva master with those changes If test issues appear, you might need to adjust the tests After the PR is merged, consider doing a release of the storage submodule  </description>
    </item>
    
    <item>
      <title>Releasing</title>
      <link>https://owncloud.github.io/extensions/storage/releasing/</link>
      <pubDate>Fri, 22 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/storage/releasing/</guid>
      <description>Preparation Release     To release a new version of the storage submodule, you have to follow a few simple steps.
Preparation  Before releasing, make sure that reva has been updated to the desired version  Release  Check out master git checkout master git pull origin master Create a new tag (preferably signed) and replace the version number accordingly. Prefix the tag with the submodule storage/v.</description>
    </item>
    
  </channel>
</rss>