<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Graph on ownCloud</title>
    <link>https://owncloud.dev/extensions/graph/</link>
    <description>Recent content in Graph on ownCloud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 02 May 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://owncloud.dev/extensions/graph/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Service Configuration</title>
      <link>https://owncloud.dev/extensions/graph/configuration/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.dev/extensions/graph/configuration/</guid>
      <description> Environment Variables        Name Type Default Value Description     GRAPH_DEBUG_ADDR string 127.0.0.1:9124    GRAPH_DEBUG_TOKEN string     GRAPH_DEBUG_PPROF bool false    GRAPH_DEBUG_ZPAGES bool false    GRAPH_HTTP_ADDR string 127.0.0.1:9120    GRAPH_HTTP_ROOT string /graph    REVA_GATEWAY string 127.0.0.1:9142    OCIS_JWT_SECRET;OCS_JWT_SECRET string Pive-Fumkiu4    OCIS_URL;GRAPH_SPACES_WEBDAV_BASE string https://localhost:9200    GRAPH_SPACES_WEBDAV_PATH string /dav/spaces/    GRAPH_SPACES_DEFAULT_QUOTA string 1000000000    OCIS_INSECURE;GRAPH_SPACES_INSECURE bool false    GRAPH_SPACES_EXTENDED_SPACE_PROPERTIES_CACHE_TTL int 0    GRAPH_IDENTITY_BACKEND string cs3    GRAPH_LDAP_URI string ldap://localhost:9125    OCIS_INSECURE;GRAPH_LDAP_INSECURE bool false    GRAPH_LDAP_BIND_DN string     GRAPH_LDAP_BIND_PASSWORD string     GRAPH_LDAP_SERVER_UUID bool false    GRAPH_LDAP_SERVER_WRITE_ENABLED bool false    GRAPH_LDAP_USER_BASE_DN string ou=users,dc=ocis,dc=test    GRAPH_LDAP_USER_SCOPE string sub    GRAPH_LDAP_USER_FILTER string (objectClass=inetOrgPerson)    GRAPH_LDAP_USER_EMAIL_ATTRIBUTE string mail    GRAPH_LDAP_USER_DISPLAYNAME_ATTRIBUTE string displayName    GRAPH_LDAP_USER_NAME_ATTRIBUTE string uid    GRAPH_LDAP_USER_UID_ATTRIBUTE string owncloudUUID    GRAPH_LDAP_GROUP_BASE_DN string ou=groups,dc=ocis,dc=test    GRAPH_LDAP_GROUP_SEARCH_SCOPE string sub    GRAPH_LDAP_GROUP_FILTER string (objectclass=groupOfNames)    GRAPH_LDAP_GROUP_NAME_ATTRIBUTE string cn    GRAPH_LDAP_GROUP_ID_ATTRIBUTE string owncloudUUID      </description>
    </item>
    
    <item>
      <title>Spaces</title>
      <link>https://owncloud.dev/extensions/graph/spaces/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.dev/extensions/graph/spaces/</guid>
      <description>Graph Service Spaces API  Methods   Examples  Starting conditions        Graph Service     The Graph service is a reference implementation of the MS Graph API. There are no libraries doing any work only a set of routes and handlers.
Spaces API     The Spaces API makes use of the MS Graph API Drive resource to represent the concept of a Storage Space.</description>
    </item>
    
    <item>
      <title>Users</title>
      <link>https://owncloud.dev/extensions/graph/users/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.dev/extensions/graph/users/</guid>
      <description>Users API  Reading users  GET /me GET /users GET /users/{userid or accountname}   Creating / Updating Users  POST /users  Request Body Response   DELETE /users/{id} PATCH /users/{id}          Users API     The Users API is implementing a subset of the functionality of the MS Graph User resource The JSON representation of a User handled by the Users API looks like this:</description>
    </item>
    
    <item>
      <title>Groups</title>
      <link>https://owncloud.dev/extensions/graph/groups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.dev/extensions/graph/groups/</guid>
      <description>Groups API  Reading groups  GET /groups GET /groups/{groupid}   Getting Group Members  GET /groups/{groupid}/members   Creating / Updating Groups  POST /groups  Request Body Response   DELETE /groups/{id} PATCH /groups/{id}   Adding a single member to a group  POST /groups/{id}/members/$ref   Adding multiple members in a single request  PATCH /groups/{id}   Removing a member  DELETE /groups/{groupid}/members/{id}/$ref          Groups API     The Groups API is implementing a subset of the functionality of the MS Graph Group resource The JSON representation of a Group as handled by the Groups API looks like this:</description>
    </item>
    
  </channel>
</rss>
