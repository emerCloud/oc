<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Architecture Decisions on ownCloud</title>
    <link>https://owncloud.dev/ocis/adr/</link>
    <description>Recent content in Architecture Decisions on ownCloud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Feb 2021 20:21:00 +0100</lastBuildDate>
    
	<atom:link href="https://owncloud.dev/ocis/adr/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>8. Configuration</title>
      <link>https://owncloud.dev/ocis/adr/0008-configuration/</link>
      <pubDate>Mon, 03 May 2021 15:00:00 +0100</pubDate>
      
      <guid>https://owncloud.dev/ocis/adr/0008-configuration/</guid>
      <description>5. Configuration Management for oCIS  Status: proposed Deciders: @refs, @butonic, @micbar, @dragotin, @pmaier1 Date: 2021-05-03   5. Configuration Management for oCIS  Context and Problem Statement Decision Drivers Considered Options Decision Outcome  Positive Consequences   Pros and Cons of the Options  Extend FlagInputSourceExtension interface Feature request: support for structured configuration (urfave/cli). Clearly defined boundaries of what can and cannot be done. Expose structured field values as CLI flags Drop support for structure configuration Adapt the &amp;ldquo;structured config files have the highest priority&amp;rdquo; within oCIS   Notes  Use Cases and Expected Behaviors  Supervised (ocis server or ocis run extension)  Known Gotchas   Unsupervised (ocis proxy)   Other known use cases Use Cases for Development Config Loading Start an extension multiple times with different configs (in Supervised mode) Developing Considered Alternatives Further Follow up PR&amp;rsquo;s State of the Art      Context and Problem Statement As per urfave/cli&amp;rsquo;s doc:</description>
    </item>
    
    <item>
      <title>7. Open Graph API for oCIS File Spaces</title>
      <link>https://owncloud.dev/ocis/adr/0007-api-for-spaces/</link>
      <pubDate>Mon, 03 May 2021 09:00:00 +0100</pubDate>
      
      <guid>https://owncloud.dev/ocis/adr/0007-api-for-spaces/</guid>
      <description>Status: accepted Deciders: @butonic, @micbar, @dragotin, @hodyroff, @pmaier1 Date: 2021-03-19  Technical Story: API to enable the concept of Spaces
Context and Problem Statement As one of the building blocks for Spaces in oCIS we plan to add an API that returns information about available spaces. This ADR discusses the API design oriented on the Microsoft Graph API.
 Note: The term &amp;ldquo;spaces&amp;rdquo; is used here in the context of &amp;ldquo;a space where files can be saved&amp;rdquo;, similar to a directory.</description>
    </item>
    
    <item>
      <title>6. Service Discovery within oCIS and Reva</title>
      <link>https://owncloud.dev/ocis/adr/0006-service-discovery/</link>
      <pubDate>Mon, 19 Apr 2021 13:00:00 +0100</pubDate>
      
      <guid>https://owncloud.dev/ocis/adr/0006-service-discovery/</guid>
      <description>Status: accepted Deciders: @refs, @butonic, @micbar, @dragotin, @pmaier1 Date: 2021-04-19  Technical Story: Introduce Named Services.
Context and Problem Statement Reva relies heavily on config files. A known implication of this approach are having to know a-priori where a service is running (host + port). We want to move away from hardcoded values and rely instead on named services for service discovery. Furthermore, we would like both platforms (Reva + oCIS) to have the same source of truth at any given time, not having one to notify the other whenever a service status changes.</description>
    </item>
    
    <item>
      <title>5. Account Management through CS3 API</title>
      <link>https://owncloud.dev/ocis/adr/0005-cs3-api-account-management/</link>
      <pubDate>Mon, 12 Apr 2021 15:00:00 +0100</pubDate>
      
      <guid>https://owncloud.dev/ocis/adr/0005-cs3-api-account-management/</guid>
      <description>Status: proposed Deciders: @refs, @butonic, @micbar, @dragotin, @pmaier1 Date: 2021-04-12  Technical Story: Write only management API for User and Group resources
Context and Problem Statement What would be a more effective way of using network resources and handle account management within the oCIS-Reva ecosystem? Separating account management at the service level is pragmatic and allows for fast iterations, but also steadily accumulates inconsistencies and bloats technical debt.
Decision Drivers  Reduce number of network calls.</description>
    </item>
    
    <item>
      <title>3. Use external User Management</title>
      <link>https://owncloud.dev/ocis/adr/0003-external-user-management/</link>
      <pubDate>Wed, 09 Dec 2020 20:21:00 +0100</pubDate>
      
      <guid>https://owncloud.dev/ocis/adr/0003-external-user-management/</guid>
      <description>Status: accepted Deciders: @butonic, @micbar, @dragotin, @hodyroff, @pmaier1 Date: 2020-12-09  Technical Story: Skip account-service by talking to CS3 user-api
Context and Problem Statement To attach metadata like shares to users ownCloud relies on persistent, non-reassignable, unique identifiers for users (and files). Email and username can change when a user changes his name. But even the OIDC sub+iss combination may change when the IdP changes. While there is an account porting protocol that describes how a relying party (RP) such as ownCloud should behave, it still requires the RP to maintain its own user identifiers.</description>
    </item>
    
    <item>
      <title>4. Support Hot Migration</title>
      <link>https://owncloud.dev/ocis/adr/0004-support-hot-migration/</link>
      <pubDate>Wed, 09 Dec 2020 20:21:00 +0100</pubDate>
      
      <guid>https://owncloud.dev/ocis/adr/0004-support-hot-migration/</guid>
      <description>Status: proposed Deciders: @butonic, @micbar, @dragotin, @hodyroff, @pmaier1 Date: 2021-03-16  Technical Story: [description | ticket/issue URL]
Context and Problem Statement Migration is one of the most important topics of the oCIS story. We need to provide a concept how to migrate from oC10 to oCIS.
Decision Drivers  Do not lose file blob or meta data.  To prevent a sync surge from clients the etag for files should be migrated.</description>
    </item>
    
    <item>
      <title>2. Persist accounts in a CS3 storage</title>
      <link>https://owncloud.dev/ocis/adr/0002-persist-accounts-using-cs3-storage/</link>
      <pubDate>Fri, 21 Aug 2020 20:21:00 +0100</pubDate>
      
      <guid>https://owncloud.dev/ocis/adr/0002-persist-accounts-using-cs3-storage/</guid>
      <description>Status: accepted Deciders: @butonic, @felixboehm Date: 2020-08-21  Technical Story: File system based indexing
Context and Problem Statement To set up High Availability (HA) or a geo-replicated setup we need to persist accounts in a distributed way. To efficiently query the accounts by email or username, and not only by id, they need to be indexed. Unfortunately, the bleve index we currently store locally on disk cannot be shared by multiple instances, preventing a scale out deployment.</description>
    </item>
    
    <item>
      <title>1. Introduce an accounts service</title>
      <link>https://owncloud.dev/ocis/adr/0001-introduce-accounts-service/</link>
      <pubDate>Mon, 15 Jun 2020 20:21:00 +0100</pubDate>
      
      <guid>https://owncloud.dev/ocis/adr/0001-introduce-accounts-service/</guid>
      <description>Status: superseded by ADR-0003 Deciders: @butonic, @felixboehm, @micbar, @pmaier1 Date: 2020-06-15  Technical Story: persist accounts
Context and Problem Statement To attach metadata like shares to users ownCloud relies on persistent, non-reassignable, unique identifiers for users (and files). Email und username can change when a user changes his name. But even the OIDC sub+iss combination may change when the IdP changes. While there is an account porting protocol that describes how a relying party (RP) such as ownCloud should behave, it still requires the RP to maintain its own user identifiers.</description>
    </item>
    
  </channel>
</rss>